<?php

/**
 * @file
 * Hic sunt dracones.
 */

/**
 * Futurium extra fields.
 */
function futurium_isa_extras_field_extra_fields() {

  $flag = flag_get_flag('attending');
  $extrafield_name = 'attendance_count';

  // Add attending flag dummy field.
  foreach ($flag->types as $key => $type) {
    $extra['node'][$type]['display'][$extrafield_name] = array(
      'label' => t('Attendance'),
      'description' => t('Attendance flag count.'),
      'weight' => 0,
    );
  }

  // Add author_picture dummy field.
  $extrafield_name = 'author_picture';
  $extra['node']['ideas']['display'][$extrafield_name] = array(
    'label' => t('Author Picture'),
    'description' => t('Content author\'s picture'),
    'weight' => 98,
  );

  $extrafield_name = 'post_date';
  $extra['node']['ideas']['display'][$extrafield_name] = array(
    'label' => t('Post date'),
    'description' => t('Date of node creation.'),
    'weight' => 99,
  );

  $flag = flag_get_flag('like');
  $extrafield_name = 'likes_count';

  // Add likes flag dummy field.
  foreach ($flag->types as $key => $type) {
    $extra['node'][$type]['display'][$extrafield_name] = array(
      'label' => t('Likes'),
      'description' => t('Likes flag count.'),
      'weight' => 100,
    );
  }

  return $extra;
}

/**
 * Futurium entity view.
 */
function futurium_isa_extras_entity_view($entity, $type, $view_mode, $langcode) {

  if (isset($entity->type)) {
    $extra_fields = field_info_extra_fields($type, $entity->type, 'display');

    $field_name = 'likes_count';
    if (!empty($extra_fields[$field_name]['display'][$view_mode]['visible'])) {
      $flag = flag_get_flag('like');
      $ids = entity_extract_ids($type, $entity);

      $count = $flag->get_count($ids[0]);

      $entity->content[$field_name] = array(
        '#markup' => '<div class="likes-count"><span class="value">' . $count . '</span></div>',
      );
    }

    $field_name = 'attendance_count';
    if (!empty($extra_fields[$field_name]['display'][$view_mode]['visible'])) {
      $flag = flag_get_flag('attending');
      $ids = entity_extract_ids($type, $entity);

      $count = $flag->get_count($ids[0]);

      $entity->content[$field_name] = array(
        '#markup' => '<div class="attending-count"><span class="value">' . $count . '</span></div>',
      );
    }

    $field_name = 'author_picture';
    if (!empty($extra_fields[$field_name]['display'][$view_mode]['visible'])) {
      $user = user_load($entity->uid);
      $img = theme('image_style', array('style_name' => 'media_thumbnail_small', 'path' => $user->picture->uri));

      $entity->content[$field_name] = array(
        '#markup' => '<div class="user-picture">' . $img . '</div>',
      );
    }

    $field_name = 'post_date';
    if (!empty($extra_fields[$field_name]['display'][$view_mode]['visible'])) {
      $date = format_date($entity->created, 'custom', 'j M');

      $entity->content[$field_name] = array(
        '#markup' => '<div class="post-date">' . $date . '</div>',
      );
    }

  }
}

/**
 * Implements hook_entity_info_alter().
 */
function futurium_isa_extras_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['square'] = array(
    'label' => t('Square'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function futurium_isa_extras_field_formatter_info() {
  return array(
    'taxonomy_first_term' => array(
      'label' => t('Taxonomy first term'),
      'field types' => array('taxonomy_term_reference'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function futurium_isa_extras_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  if ($display['type'] == 'taxonomy_first_term') {
    $term_id = $items[0]['tid'];
    $term = taxonomy_term_load($term_id);
    $element[0]['#markup'] = $term->name;
  }
  return $element;
}
