<?php

/**
 * @file
 * Hic sunt dracones.
 */

function futurium_isa_extras_enable() {
  // Site default settings
  variable_set('site_frontpage', 'home');
  variable_set('user_pictures', '1');
  variable_set('user_picture_default','');
  variable_set('user_picture_dimensions','85x85');
  variable_set('user_picture_file_size', '30');
  variable_set('user_picture_guidelines', '');
  variable_set('user_picture_path','');
  variable_set('user_picture_style','');
  variable_set('user_register','2');

  // Theme settings
  variable_set('theme_default', 'futurium_isa_theme');
  variable_set('admin_theme', 'seven');
  _bootstrap_default_settings();

  // Page manager settings
  variable_set('page_manager_node_view_disabled', 0);

  drupal_flush_all_caches();
}

function futurium_isa_extras_admin_paths_alter(&$paths) {
  $paths['user/*/edit'] = FALSE;
  $paths['admin/structure/taxonomy/futurium_topics/add'] = FALSE;
}

function futurium_isa_extras_preprocess_page(&$vars) {
  $vars['show_title'] = TRUE;
  $item = menu_get_item();
  $pages = array('topics','events', 'ideas');
  if (in_array($item['path'], $pages)) {
    $vars['show_title'] = FALSE;
  }
}

function futurium_isa_extras_preprocess_node(&$vars) {
  $vars['classes_array'][] = "view-mode-" . $vars['view_mode'];
  $vars['display_submitted'] = FALSE;
}

function futurium_isa_extras_menu() {

  // Registration and login pages.
  $items['account'] = array(
    'title' => 'User account',
    'title callback' => 'user_menu_title',
    'page callback' => 'user_page',
    'access callback' => TRUE,
    'file path' => drupal_get_path('module', 'user'),
    'file' => 'user.pages.inc',
    'weight' => 10000,
    'menu_name' => 'main-menu',
  );
  $items['account/login'] = array(
    'title' => 'Log in',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['account/register'] = array(
    'title' => 'Create new account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_register_form'),
    'access callback' => 'user_register_access',
    'type' => MENU_LOCAL_TASK,
  );

  $items['account/password'] = array(
    'title' => 'Request new password',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_pass'),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'file path' => drupal_get_path('module', 'user'),
    'file' => 'user.pages.inc',
  );
  $items['account/reset/%/%/%'] = array(
    'title' => 'Reset password',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_pass_reset', 2, 3, 4),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path('module', 'user'),
    'file' => 'user.pages.inc',
  );

  $items['account/logout'] = array(
    'title' => 'Log out',
    'access callback' => 'user_is_logged_in',
    'page callback' => 'user_logout',
    'weight' => 10,
    'menu_name' => 'user-menu',
    'file path' => drupal_get_path('module', 'user'),
    'file' => 'user.pages.inc',
  );
  return $items;
}

function futurium_isa_extras_menu_alter(&$items) {
  $items['search/site']['menu_name'] = 'navigation';
}

function _bootstrap_default_settings() {
  $settings = array(
    'toggle_logo' => 0,
    'toggle_name' => 1,
    'toggle_slogan' => 1,
    'toggle_node_user_picture' => 0,
    'toggle_comment_user_picture' => 0,
    'toggle_comment_user_verification' => 0,
    'toggle_favicon' => 1,
    'toggle_main_menu' => 1,
    'toggle_secondary_menu' => 0,
    'default_logo' => 1,
    'logo_path' => "",
    'logo_upload' => "",
    'default_favicon' => 1,
    'favicon_path' => "",
    'favicon_upload' => "",
    'general__active_tab' => "edit-theme-settings",
    'bootstrap__active_tab' => "edit-javascript",
    'bootstrap_breadcrumb' => "1",
    'bootstrap_breadcrumb_home' => 0,
    'bootstrap_breadcrumb_title' => 1,
    'bootstrap_navbar_position' => "",
    'bootstrap_navbar_inverse' => 1,
    'bootstrap_region_well-navigation' => "",
    'bootstrap_region_well-header' => "",
    'bootstrap_region_well-highlighted' => "",
    'bootstrap_region_well-help' => "",
    'bootstrap_region_well-content_slider' => "",
    'bootstrap_region_well-content_top' => "",
    'bootstrap_region_well-content_before_middle' => "",
    'bootstrap_region_well-content_before' => "",
    'bootstrap_region_well-content' => "",
    'bootstrap_region_well-content_after' => "",
    'bootstrap_region_well-content_after_middle' => "",
    'bootstrap_region_well-content_bottom' => "",
    'bootstrap_region_well-sidebar_first' => "well",
    'bootstrap_region_well-sidebar_second' => "",
    'bootstrap_region_well-footer' => "",
    'bootstrap_region_well-page_top' => "",
    'bootstrap_region_well-page_bottom' => "",
    'bootstrap_anchors_fix' => 1,
    'bootstrap_anchors_smooth_scrolling' => 1,
    'bootstrap_popover_enabled' => 1,
    'bootstrap_popover_animation' => 1,
    'bootstrap_popover_html' => 0,
    'bootstrap_popover_placement' => "right",
    'bootstrap_popover_selector' => "",
    'bootstrap_popover_trigger' => array(
      'click' => "click",
      'hover' => 0,
      'focus' => 0,
      'manual' => 0,
    ),
    'bootstrap_popover_title' => "",
    'bootstrap_popover_content' => "",
    'bootstrap_popover_delay' => "0",
    'bootstrap_popover_container' => "body",
    'bootstrap_tooltip_enabled' => 1,
    'bootstrap_tooltip_descriptions' => 1,
    'bootstrap_tooltip_animation' => 1,
    'bootstrap_tooltip_html' => 0,
    'bootstrap_tooltip_placement' => "auto left",
    'bootstrap_tooltip_selector' => "",
    'bootstrap_tooltip_trigger' => array(
      'click' => "click",
      'hover' => 0,
      'focus' => 0,
      'manual' => 0,
    ),
    'bootstrap_tooltip_delay' => "0",
    'bootstrap_tooltip_container' => "body",
    'bootstrap_cdn' => "3.0.2",
    'bootstrap_bootswatch' => "",
    'bootstrap_rebuild_registry' => 0,
    'bootstrap_toggle_jquery_error' => 0,
    'jquery_update_jquery_version' => "",
  );
  variable_set('theme_futurium_isa_theme_settings', $settings);
}

function futurium_isa_extras_block_info() {
  $blocks['node_authors'] = array(
    'info' => t('Node Authors'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['node_social_share'] = array(
    'info' => t('Node Share'),
    'cache' => DRUPAL_NO_CACHE
  );
  return $blocks;
}

function futurium_isa_extras_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'node_social_share':

      $variables = array(
        'items' => array(),
        'title' => '',
        'type' => 'ul',
        'attributes' => array('class' => array('share-links', 'list-inline')),
      );

      $url = urlencode(url(current_path(), array('absolute' => TRUE)));

      $class = 'facebook';
      $l_options = array('attributes' => array('class' => $class));
      $variables['items'][] = array(
        'data' => l(t("Facebook"), "https://www.facebook.com/sharer/sharer.php?u=" . $url, $l_options),
        'class' => array($class),
      );

      $class = 'twitter';
      $l_options = array('attributes' => array('class' => $class));
      $variables['items'][] = array(
        'data' => l(t("Twitter"), "https://twitter.com/home?status=" . $url, $l_options),
        'class' => array($class),
      );

      $class = 'google-plus';
      $l_options = array('attributes' => array('class' => $class));
      $variables['items'][] = array(
        'data' => l(t("Google Plus"), "https://plus.google.com/share?url=" . $url, $l_options),
        'class' => array($class),
      );

      $block['content'] = theme('item_list', $variables);
      break;

    case 'node_authors':

      $node = menu_get_object();
      $block['content'] = "";
      if (!empty($node)) {
        $authors[] = $node->uid;
        if (isset($node->field_authors[LANGUAGE_NONE]) && !empty($node->field_authors[LANGUAGE_NONE])) {
          foreach ($node->field_authors[LANGUAGE_NONE] as $key => $value) {
            $authors[] = $value['target_id'];
          }
        }

        $output['names'][] = t('By') . ' ';
        $x = 1;
        $max = count($authors);

        foreach ($authors as $key => $uid) {
          $account = user_load($uid);
          $name = theme('username', array('account' => $account));

          $l_options = array(
            'html' => TRUE,
            'alt' => t('View !username profile', array('!username' => $name)),
          );

          $picture = theme(
            'image_style', array(
              'style_name' => 'thumbnail',
              'path' => !empty($account->picture->uri) ? $account->picture->uri : variable_get('user_picture_default'),
            )
          );

          $x++;

          if ($max > 1) {
            if($x > $max) {
              $output['names'][] = ' ' . t('and') . ' ';
            }
          }

          if ($max > 2) {
            if($x == $max) {
              $output['names'][] = ', ';
            }
          }

          $output['images'][] = l($picture, 'user/' . $uid, $l_options);
          $output['names'][] = l($name, 'user/' . $uid, $l_options);

        }

        $variables = array(
          'items' => array(),
          'title' => '',
          'type' => 'ul',
          'attributes' => array('class' => array('author-info', 'list-inline')),
        );

        foreach($output['images'] as $k => $v) {
          $variables['items'][] = array(
            'data' => $v,
            'class' => array('authors-picture'),
          );
        }

        foreach($output['names'] as $k => $v) {
          $variables['items'][] = array(
            'data' => $v,
            'class' => array('authors-name'),
          );
        }
        $block['content'] = theme('item_list', $variables);
      }


      break;
  }
  return $block;
}

/**
 * Implements hook_ctools_plugin_directory()
 */
function futurium_isa_extras_ctools_plugin_directory($module, $plugin) {
  if ($module == "panels" && in_array($plugin, array('layouts', 'styles'))) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_field_extra_fields().
 */
function futurium_isa_extras_field_extra_fields() {
  foreach (array('ideas', 'event_d4eu') as $node_type) {
    // Flaggings
    switch($node_type) {
      case 'ideas':
        $extrafield_name = 'like';
        break;
    }

    $flag = flag_get_flag($extrafield_name);
    if (isset($flag) && $flag) {
      $extra['node'][$node_type]['display'][$extrafield_name] = array(
        'label' => t("@flag_title counter", array('@flag_title' => $flag->title)),
        'description' => t('@flag_name counter.', array('@flag_name' => $flag->name)),
        'weight' => 50,
      );
    }

    // Comment count
    $extrafield_name = 'comment_count';
    $extra['node'][$node_type]['display'][$extrafield_name] = array(
      'label' => t("Comment count"),
      'description' => t('Node comments count'),
      'weight' => 51,
    );

  }
  return $extra;
 }

/**
 * Implements hook_node_view().
 * Also HOOK_entity_view() can be used.
 */
function futurium_isa_extras_node_view($node, $view_mode, $langcode) {

  $extrafields = field_extra_fields_get_display('node', $node->type, $view_mode);

  // Likes
  $extrafield_name = 'like';
  if (isset($extrafields[$extrafield_name])
      && isset($extrafields[$extrafield_name]['visible'])
      && $extrafields[$extrafield_name]['visible']) {

    $flag = flag_get_flag($extrafield_name);
    $count = $flag->get_count($node->nid);
    $plural = format_plural($count, t('Like'), t('Likes'));
    $node->content[$extrafield_name] = array('#markup' => '<div class="field fake-field like-count">' . $count . ' ' . $plural . '</div>');
  }

  // Comment count
  $extrafield_name = 'comment_count';
  if (isset($extrafields[$extrafield_name])
      && isset($extrafields[$extrafield_name]['visible'])
      && $extrafields[$extrafield_name]['visible']) {
    $count = $node->comment_count;
    $node->content[$extrafield_name] = array('#markup' => '<div class="field fake-field comment-count">' . $count . ' ' . format_plural($count, t('Comment'), t('Comments')) . '</div>');
  }

}
